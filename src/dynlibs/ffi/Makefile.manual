# Makefile for dynamic foreign function interface

# The runtime system must be compiled with support for dynamic libraries.
# The GNU ffi package must be installed.

# Where to find the GNU ffi header files and the compiled library

FFILIBDIR=/home/ian3/usr/lib
FFIINCDIR=$(FFILIBDIR)/libffi-3.0.13/include/

LIGHTNINGLIBDIR=/home/ian3/usr/lib
LIGHTNINGINCDIR=/home/ian3/usr/include

ADDINCDIRS=-I$(FFIINCDIR) -I$(LIGHTNINGINCDIR)

include ../../Makefile.inc

OPTS=-fno-defer-pop
CFLAGS=-Dunix -O2 $(OPTS) $(ADDDYNLIBCFLAGS) -I$(INCDIR) $(ADDINCDIRS) -I.

MOSMLTOOLS=camlrunm $(TOOLDIR)

MOSMLC=mosmlc -orthodox -c
MOSMLL=mosmlc
MOSMLLEX=mosmllex
MOSMLYACC=mosmlyac

all: libmffi.so Ffi.uo Jit.uo CParser.uo                              \
    CPPLexer.uo GrammarParser.uo GrammarLexer.uo GrammarSyntax.uo     \
    CSyntax.uo RewriteLexer.uo RewriteParser.uo                       \
    RewriteMain.uo Rewrite.uo CPPInfoParser.uo CPPInfoLexer.uo	      \
    Location2.uo Hasht.uo WordPrim.uo MachineWord.uo WordN.uo         \
    AbstractMachineWord.uo ArraySliceWordEnc.uo VectorSliceWordEnc.uo \
    WordEncSig.ui PrimEncSig.ui PrimEnc.uo VectorWordEnc.uo Globals.uo\
    TestWord.uo WordFormat.uo CompTestWord.uo WordRepr.uo SpeedTest.uo\
    WordOpsSig.ui WordOps.uo WordReprSig.ui Rot13.uo BitSet.uo       \
    testlightning PrologParser.uo PrologLexer.uo Prolog.uo

testlightning: testlightning.c
	gcc testlightning.c  `pkg-config --cflags --libs glib-2.0` \
              -I./lightning-2.0.4/include -Wl,-rpath,./debug -L./debug -llightning -Wl,-rpath,/home/ian3/usr/lib -o testlightning

install:
	cp libmffi.so $(LIBDIR)
	cp Ffi.ui Ffi.uo Jit.uo Jit.ui $(LIBDIR)

ffi.o: ffi.c mffi.h mem.h types.h
	$(CC) $(CFLAGS) -c -o ffi.o ffi.c

jit: jit.c mffi.h mem.h types.h
	$(CC) $(CFLAGS)  -DTEST_PROGRAM -llightning -o jit jit.c

jit.o: jit.c mffi.h mem.h types.h
	$(CC) $(CFLAGS) -c -o jit.o jit.c

svec.o: svec.c mffi.h mem.h
	$(CC) $(CFLAGS) -c -o svec.o svec.c

mem.o: mem.c mffi.h
	$(CC) $(CFLAGS) `pkg-config --cflags glib-2.0` -c -o mem.o mem.c

types.o: types.c mffi.h mem.h types.h 
	$(CC) $(CFLAGS) -c -o types.o types.c

libmffi.so: svec.o jit.o mem.o ffi.o types.o
	$(DYNLD) $(ADDLDLFAGS) -Wl,-rpath,$(FFILIBDIR) `pkg-config --libs glib-2.0` -o libmffi.so -lffi -llightning mem.o jit.o svec.o ffi.o types.o

Ffi.ui : Ffi.sig
	$(MOSMLC) -imptypes Ffi.sig

Ffi.uo : Ffi.sml
	$(MOSMLC) -imptypes Ffi.sml

Jit.ui : Jit.sig Ffi.ui
	$(MOSMLC) -imptypes Jit.sig

Jit.uo : Jit.sml Jit.ui
	$(MOSMLC) -imptypes Jit.sml

PrologLexer.sml : PrologLexer.lex

PrologParser.sml PrologParser.sig: PrologParser.grm
	$(MOSMLYACC) PrologParser.grm

PrologParser.ui : PrologParser.sig
	$(MOSMLC) -liberal PrologParser.sig

PrologLexer.uo : PrologParser.uo PrologLexer.sml 
	$(MOSMLC) PrologLexer.sml

Prolog.ui : Prolog.sig
	$(MOSMLC) Prolog.sig

Prolog.uo : Prolog.ui PrologLexer.uo PrologParser.uo CSyntax.uo GrammarSyntax.uo Prolog.sml
	$(MOSMLC) Prolog.sml

CPPInfoLexer.sml : CPPInfoLexer.lex

CPPInfoParser.sml CPPInfoParser.sig: CPPInfoParser.grm
	$(MOSMLYACC) CPPInfoParser.grm

CPPInfoParser.ui : CPPInfoParser.sig
	$(MOSMLC) -liberal CPPInfoParser.sig

GrammarLexer.sml : GrammarLexer.lex

GrammarParser.sml GrammarParser.sig: GrammarParser.grm
	$(MOSMLYACC) GrammarParser.grm

GrammarParser.ui : GrammarParser.sig
	$(MOSMLC) -liberal GrammarParser.sig

CParser.ui : CParser.sig
	$(MOSMLC) -liberal CParser.sig

CPPLexer.sml : CPPLexer.lex

CParser.sml CParser.sig: CParser.grm
	$(MOSMLYACC) CParser.grm

RewriteLexer.sml : RewriteLexer.lex

RewriteParser.sml RewriteParser.sig: RewriteParser.grm
	$(MOSMLYACC) RewriteParser.grm

RewriteParser.ui : RewriteParser.sig
	$(MOSMLC) -liberal RewriteParser.sig

RewriteParser.uo : RewriteParser.sml RewriteParser.ui 
	$(MOSMLC) RewriteParser.sml

RewriteMain.uo : PrologLexer.uo PrologParser.uo RewriteMain.sml
	$(MOSMLC) RewriteMain.sml

Rewrite.uo : Rewrite.sml RewriteParser.uo GrammarSyntax.uo
	$(MOSMLC) Rewrite.sml

GrammarSyntax.uo : GrammarSyntax.sml
	$(MOSMLC) GrammarSyntax.sml

CSyntax.uo : CSyntax.sml
	$(MOSMLC) CSyntax.sml

Location2.uo : Location2.sml Location2.ui
	$(MOSMLC) Location2.sml

PrimEncSig.ui : Jit.uo PrimEncSig.sml
	$(MOSMLC) -toplevel Jit.uo -c PrimEncSig.sml

PrimEnc.uo : PrimEncSig.ui PrimEnc.sml
	$(MOSMLC) -toplevel Jit.uo PrimEncSig.ui -c PrimEnc.sml

SpeedTest.uo : SpeedTest.sml
	$(MOSMLC) SpeedTest.sml

Globals.uo : Globals.sml
	$(MOSMLC) -toplevel Globals.sml

WordPrim.uo : WordPrim.sml
	$(MOSMLC) -toplevel -c WordPrim.sml

WordPrim.ui : WordPrim.uo

WordReprSig.ui : WordReprSig.sml
	$(MOSMLC) -toplevel WordReprSig.sml

Rot13.uo : Rot13.sml
	$(MOSMLC) -toplevel Rot13.sml

BitSet.uo : BitSet.sml
	$(MOSMLC) -toplevel BitSet.sml

WordN.uo : WordN.sml  WordPrim.ui WordReprSig.ui
	$(MOSMLC) -toplevel WordReprSig.ui WordPrim.ui -c WordN.sml

# WordN.ui : WordN.sig
#	$(MOSMLC) -toplevel -c WordN.sig

#WordN.uo : WordPrim.ui WordN.sml WordN.ui
#	$(MOSMLC) -toplevel WordN.ui WordPrim.ui -c WordN.sml

WordFormat.uo WordFormat.ui : WordFormat.sml WordReprSig.ui
	$(MOSMLC) -toplevel WordReprSig.ui -c WordFormat.sml

CompTestWord.uo CompTestWord.ui : Globals.uo WordReprSig.ui WordFormat.ui CompTestWord.sml
	$(MOSMLC) -toplevel Globals.ui WordReprSig.ui WordFormat.ui -c CompTestWord.sml

TestWord.uo : Globals.ui CompTestWord.ui WordFormat.ui WordReprSig.ui TestWord.sml
	$(MOSMLC) -toplevel Globals.ui CompTestWord.ui WordFormat.ui WordReprSig.ui -c TestWord.sml

WordEncSig.ui : Jit.uo PrimEncSig.ui WordEncSig.sml  
	$(MOSMLC) -toplevel PrimEncSig.ui Jit.uo -c WordEncSig.sml

WordOpsSig.ui : Jit.ui WordOpsSig.sml
	$(MOSMLC) -toplevel Jit.ui -c WordOpsSig.sml

WordOps.uo : Jit.uo WordOpsSig.sml WordOps.sml
	$(MOSMLC) -toplevel Jit.uo WordOpsSig.ui -c WordOps.sml

VectorWordEnc.uo : WordPrim.ui WordEncSig.ui PrimEncSig.ui VectorWordEnc.sml
	$(MOSMLC) -toplevel WordPrim.ui PrimEncSig.ui WordEncSig.ui -c VectorWordEnc.sml

VectorSliceWordEnc.uo : WordPrim.ui WordEncSig.ui PrimEncSig.ui VectorSliceWordEnc.sml
	$(MOSMLC) -toplevel WordPrim.ui PrimEncSig.ui WordEncSig.ui -c VectorSliceWordEnc.sml

ArraySliceWordEnc.uo : WordPrim.ui WordEncSig.ui PrimEncSig.ui ArraySliceWordEnc.sml
	$(MOSMLC) -toplevel WordPrim.ui PrimEncSig.ui WordEncSig.ui -c ArraySliceWordEnc.sml


AbstractMachineWord.uo : WordPrim.ui WordEncSig.ui PrimEncSig.ui WordOpsSig.ui WordOps.uo AbstractMachineWord.sml 
	$(MOSMLC) -toplevel WordPrim.ui WordEncSig.ui PrimEncSig.ui WordOpsSig.ui WordOps.uo -c AbstractMachineWord.sml

MachineWord.uo : MachineWord.sml WordPrim.ui
	$(MOSMLC) -toplevel WordPrim.ui -c MachineWord.sml

test:
	mosml testffi.sml

clean:
	rm -f *.o
	rm -f *.so
	rm -f *.ui
	rm -f *.uo
	rm -f *Parser.sml
	rm -f *Parser.sig
	rm -f *Parser.output
	rm -f *Lexer.sml
	rm -f Makefile.bak

depend: GrammarParser.sml GrammarLexer.sml RewriteParser.sml \
           RewriteLexer.sml CPPLexer.sml CParser.sml CPPInfoParser.sml \
           CPPInfoLexer.sml
	rm -f Makefile.bak
	mv Makefile Makefile.bak
	$(MOSMLTOOLS)/cutdeps < Makefile.bak > Makefile
	$(MOSMLTOOLS)/mosmldep >> Makefile

### DO NOT DELETE THIS LINE
PrologLexer.uo: PrologParser.ui 
Ffi.uo: Ffi.ui 
ArraySliceWordEnc.uo: Jit.ui PrimEnc.uo 
CPPInfoParser.ui: CSyntax.uo 
PrologParser.uo: PrologParser.ui GrammarSyntax.uo 
testmcword.uo: TestWord.uo Jit.ui Ffi.ui 
CPPInfoLexer.uo: CPPInfoParser.ui 
testhugewords.uo: Ffi.ui WordFormat.uo VectorWordEnc.uo 
Rewrite.uo: Location2.ui RewriteLexer.uo RewriteParser.ui GrammarSyntax.uo 
CParser.uo: CParser.ui CSyntax.uo 
Jit.uo: Jit.ui Ffi.ui 
Hasht.uo: Hasht.ui 
MachineWord.uo: Jit.ui Ffi.ui 
AbstractMachineWord.uo: Jit.ui Ffi.ui 
testrewrite.uo: Jit.ui Ffi.ui GrammarSyntax.uo RewriteMain.uo CSyntax.uo \
    Hasht.ui Rewrite.uo 
TestWord.uo: CompTestWord.uo Globals.uo SpeedTest.ui 
GrammarLexer.uo: GrammarParser.ui 
VectorWordEnc.uo: Jit.ui PrimEnc.uo 
Rot13.uo: Rot13.uo 
Prolog.uo: Prolog.ui GrammarSyntax.uo PrologParser.ui PrologLexer.uo 
CSyntax.uo: GrammarSyntax.uo Hasht.ui Rewrite.uo 
PrologParser.ui: GrammarSyntax.uo 
testffi.uo: Jit.ui Ffi.ui 
testprolog.uo: Prolog.ui 
RewriteParser.ui: GrammarSyntax.uo 
SpeedTest.uo: SpeedTest.ui 
GrammarParser.ui: GrammarSyntax.uo 
CParser.ui: CSyntax.uo 
RewriteMain.uo: CParser.ui Location2.ui CPPInfoParser.ui CPPLexer.uo \
    CSyntax.uo GrammarLexer.uo GrammarParser.ui CPPInfoLexer.uo 
CPPInfoParser.uo: CPPInfoParser.ui CSyntax.uo 
PrimEncSig.uo: Jit.ui PrimEnc.uo 
RewriteParser.uo: RewriteParser.ui GrammarSyntax.uo 
CPPLexer.uo: CParser.ui CSyntax.uo Hasht.ui 
WordRepr.uo: WordRepr.ui Jit.ui Ffi.ui 
WordEncSig.uo: Jit.ui 
Jit.ui: Ffi.ui 
RewriteLexer.uo: RewriteParser.ui 
GrammarParser.uo: GrammarParser.ui GrammarSyntax.uo 
VectorSliceWordEnc.uo: Jit.ui PrimEnc.uo 
WordOps.uo: Jit.ui 
PrimEnc.uo: Jit.ui Ffi.ui 
Location2.uo: Location2.ui 
