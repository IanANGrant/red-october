# Makefile.in generated by automake 1.14 from Makefile.am.
# runtime/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/redoctober
pkgincludedir = $(includedir)/redoctober
pkglibdir = $(libdir)/redoctober
pkglibexecdir = $(libexecdir)/redoctober
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = camlrunm$(EXEEXT) $(am__EXEEXT_1)
#am__append_1 = camlrunmd
EXTRA_PROGRAMS = camlrunmd$(EXEEXT)
am__append_2 = $(GUILE_CFLAGS)
am__append_3 = $(GUILE_LIBS)
subdir = runtime
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/autoconfig.h.in $(top_srcdir)/build-aux/depcomp \
	$(camlrunm_inst_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = autoconfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(camlrunm_instdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libcamlrunm_2.2_la_LIBADD =
am__objects_1 = libcamlrunm_2.2_la-alloc.lo \
	libcamlrunm_2.2_la-expand.lo \
	libcamlrunm_2.2_la-floats.lo \
	libcamlrunm_2.2_la-intern.lo \
	libcamlrunm_2.2_la-lexing.lo \
	libcamlrunm_2.2_la-meta.lo \
	libcamlrunm_2.2_la-parsing.lo \
	libcamlrunm_2.2_la-str.lo \
	libcamlrunm_2.2_la-callback.lo \
	libcamlrunm_2.2_la-extern.lo \
	libcamlrunm_2.2_la-freelist.lo \
	libcamlrunm_2.2_la-interncp.lo \
	libcamlrunm_2.2_la-main.lo \
	libcamlrunm_2.2_la-minor_gc.lo \
	libcamlrunm_2.2_la-roots.lo \
	libcamlrunm_2.2_la-sys.lo \
	libcamlrunm_2.2_la-compare.lo \
	libcamlrunm_2.2_la-externcp.lo \
	libcamlrunm_2.2_la-gc_ctrl.lo \
	libcamlrunm_2.2_la-interp.lo \
	libcamlrunm_2.2_la-major_gc.lo \
	libcamlrunm_2.2_la-misc.lo \
	libcamlrunm_2.2_la-runtime.lo \
	libcamlrunm_2.2_la-unix.lo \
	libcamlrunm_2.2_la-fail.lo \
	libcamlrunm_2.2_la-ints.lo \
	libcamlrunm_2.2_la-md5sum.lo \
	libcamlrunm_2.2_la-mosml.lo \
	libcamlrunm_2.2_la-signals.lo \
	libcamlrunm_2.2_la-dynlib.lo \
	libcamlrunm_2.2_la-fix_code.lo \
	libcamlrunm_2.2_la-hash.lo \
	libcamlrunm_2.2_la-io.lo \
	libcamlrunm_2.2_la-memory.lo \
	libcamlrunm_2.2_la-stacks.lo
am_libcamlrunm_2.2_la_OBJECTS = $(am__objects_1)
libcamlrunm_2.2_la_OBJECTS =  \
	$(am_libcamlrunm_2.2_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libcamlrunm_2.2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
#am__EXEEXT_1 = camlrunmd$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am_camlrunm_OBJECTS = camlrunm-guilert.$(OBJEXT)
am__objects_2 = camlrunm-prims.$(OBJEXT)
nodist_camlrunm_OBJECTS = $(am__objects_2)
camlrunm_OBJECTS = $(am_camlrunm_OBJECTS) $(nodist_camlrunm_OBJECTS)
camlrunm_DEPENDENCIES = $(liblaname)
camlrunm_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(camlrunm_CFLAGS) \
	$(CFLAGS) $(camlrunm_LDFLAGS) $(LDFLAGS) -o $@
am__objects_3 = camlrunmd-guilert.$(OBJEXT)
am__objects_4 = camlrunmd-alloc.$(OBJEXT) camlrunmd-expand.$(OBJEXT) \
	camlrunmd-floats.$(OBJEXT) camlrunmd-intern.$(OBJEXT) \
	camlrunmd-lexing.$(OBJEXT) camlrunmd-meta.$(OBJEXT) \
	camlrunmd-parsing.$(OBJEXT) camlrunmd-str.$(OBJEXT) \
	camlrunmd-callback.$(OBJEXT) camlrunmd-extern.$(OBJEXT) \
	camlrunmd-freelist.$(OBJEXT) camlrunmd-interncp.$(OBJEXT) \
	camlrunmd-main.$(OBJEXT) camlrunmd-minor_gc.$(OBJEXT) \
	camlrunmd-roots.$(OBJEXT) camlrunmd-sys.$(OBJEXT) \
	camlrunmd-compare.$(OBJEXT) camlrunmd-externcp.$(OBJEXT) \
	camlrunmd-gc_ctrl.$(OBJEXT) camlrunmd-interp.$(OBJEXT) \
	camlrunmd-major_gc.$(OBJEXT) camlrunmd-misc.$(OBJEXT) \
	camlrunmd-runtime.$(OBJEXT) camlrunmd-unix.$(OBJEXT) \
	camlrunmd-fail.$(OBJEXT) camlrunmd-ints.$(OBJEXT) \
	camlrunmd-md5sum.$(OBJEXT) camlrunmd-mosml.$(OBJEXT) \
	camlrunmd-signals.$(OBJEXT) camlrunmd-dynlib.$(OBJEXT) \
	camlrunmd-fix_code.$(OBJEXT) camlrunmd-hash.$(OBJEXT) \
	camlrunmd-io.$(OBJEXT) camlrunmd-memory.$(OBJEXT) \
	camlrunmd-stacks.$(OBJEXT)
am_camlrunmd_OBJECTS = $(am__objects_3) $(am__objects_4) \
	camlrunmd-debugger.$(OBJEXT)
am__objects_5 = camlrunmd-prims.$(OBJEXT)
nodist_camlrunmd_OBJECTS = $(am__objects_5)
camlrunmd_OBJECTS = $(am_camlrunmd_OBJECTS) \
	$(nodist_camlrunmd_OBJECTS)
camlrunmd_LDADD = $(LDADD)
camlrunmd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(camlrunmd_CFLAGS) \
	$(CFLAGS) $(camlrunmd_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libcamlrunm_2.2_la_SOURCES) $(camlrunm_SOURCES) \
	$(nodist_camlrunm_SOURCES) $(camlrunmd_SOURCES) \
	$(nodist_camlrunmd_SOURCES)
DIST_SOURCES = $(libcamlrunm_2.2_la_SOURCES) $(camlrunm_SOURCES) \
	$(camlrunmd_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(camlrunm_inst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)autoconfig.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ian3/ML/github/redoctober/src/build-aux/missing aclocal-1.14
ALIGNMENT = 
ALIGN_DOUBLE = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/ian3/ML/github/redoctober/src/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/ian3/ML/github/redoctober/src/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/ian3/ML/github/redoctober/src/build-aux/missing automake-1.14
AWK = mawk
CAMLRTLDFLAGS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -I/home/ian3/usr/include
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
GUILE_CFLAGS = -pthread -I/home/ian3/usr/include/guile/2.0 -I/home/ian3/usr/include  
GUILE_LIBS = -L/home/ian3/usr/lib -lguile-2.0 -lgc  
HAS_BCOPY = 
HAS_CRYPT = 
HAS_DIRENT = 
HAS_DUP2 = 
HAS_FCHMOD = 
HAS_GETGROUPS = 
HAS_GETPRIORITY = 
HAS_LOCKF = 
HAS_MEMCPY = 
HAS_MEMMOVE = 
HAS_MKFIFO = 
HAS_RENAME = 
HAS_RTLD_DEEPBIND = 
HAS_RTLD_NODELETE = 
HAS_RTLD_NOLOAD = 
HAS_SELECT = 
HAS_SETJMP = 
HAS_SIGHANDLER_T = 
HAS_SOCKETS = 
HAS_STRERROR = 
HAS_SYMLINK = 
HAS_TERMIOS = 
HAS_TRUNCATE = 
HAS_UNISTD = 
HAS_UTIME = 
HAS_UTIMES = 
HAS_WAIT3 = 
HAS_WAITPID = 
HAVE_GUILE = 
HAVE_LIBFFI = yes
HAVE_LIBGMP = yes
HAVE_LIBLIGHTNING = yes
HAVE_LIBPQ = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /home/ian3/usr/i686-pc-linux-gnu/bin/ld
LDFLAGS = 
LIBFFI = /home/ian3/usr/lib/libffi.so -Wl,-rpath -Wl,/home/ian3/usr/lib
LIBFFI_CFLAGS = -I/home/ian3/usr/lib/libffi-3.0.13/include  
LIBFFI_LIBS = -L/home/ian3/usr/lib -lffi  
LIBFFI_PREFIX = /home/ian3/usr
LIBGMP = /home/ian3/usr/lib/libgmp.so -Wl,-rpath -Wl,/home/ian3/usr/lib
LIBGMP_PREFIX = /home/ian3/usr
LIBLIGHTNING = /home/ian3/usr/lib/liblightning.so -L/home/ian3/usr/lib /home/ian3/usr/lib/libopcodes.so /home/ian3/usr/lib/libbfd.so /home/ian3/usr/lib/libz.so /home/ian3/usr/lib/libiberty.a -Wl,-rpath -Wl,/home/ian3/usr/lib
LIBLIGHTNING_PREFIX = /home/ian3/usr
LIBOBJS = 
LIBPQ_CFLAGS = -I/home/ian3/usr/include  
LIBPQ_LIBS = -L/home/ian3/usr/lib -lpq  
LIBS = -lcrypt -lm -lc -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBFFI = -L/home/ian3/usr/lib -lffi -R/home/ian3/usr/lib
LTLIBGMP = -L/home/ian3/usr/lib -lgmp -R/home/ian3/usr/lib
LTLIBLIGHTNING = -L/home/ian3/usr/lib -llightning -L/home/ian3/usr/lib -lopcodes -L/home/ian3/usr/lib -lbfd -L/home/ian3/usr/lib -lz -L/home/ian3/usr/lib -liberty -R/home/ian3/usr/lib
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ian3/ML/github/redoctober/src/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MOSML_BIG_ENDIAN = 
NM = /home/ian3/usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = redoctober
PACKAGE_BUGREPORT = ian.a.n.grant@googlemail.com
PACKAGE_NAME = redoctober
PACKAGE_STRING = redoctober 2.2
PACKAGE_TARNAME = redoctober
PACKAGE_URL = 
PACKAGE_VERSION = 2.2
PATH_SEPARATOR = :
PGCTL = /home/ian3/usr/bin/pg_ctl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /home/ian3/usr/lib/pkgconfig:/usr/lib/pkgconfig
PSQL = /home/ian3/usr/bin/psql
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SIGNED_CHAR_WORKS = 
SIXTYFOUR = 
STRIP = strip
VERSION = 2.2
abs_builddir = /home/ian3/ML/github/redoctober/src/runtime
abs_srcdir = /home/ian3/ML/github/redoctober/src/runtime
abs_top_builddir = /home/ian3/ML/github/redoctober/src
abs_top_srcdir = /home/ian3/ML/github/redoctober/src
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ian3/ML/github/redoctober/src/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
linux = 
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/ian3/usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
liblaname = libcamlrunm-2.2.la
lib_LTLIBRARIES = $(liblaname)
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_builddir)
AM_CFLAGS = $(GCC_CFLAGS)
BUILT_SOURCES = primitives prims.c opnames.h jumptbl.h
camlrunm_SOURCES = guilert.c
LIBSOURCES = \
   alloc.c     expand.c    floats.c    intern.c    lexing.c    meta.c      parsing.c  str.c  \
   callback.c  extern.c    freelist.c  interncp.c  main.c      minor_gc.c  roots.c    sys.c  \
   compare.c   externcp.c  gc_ctrl.c   interp.c    major_gc.c  misc.c      runtime.c  unix.c \
   fail.c      ints.c      md5sum.c    mosml.c     signals.c   dynlib.c    fix_code.c hash.c \
   io.c        memory.c    stacks.c


# what about this DOS stuff?
# graph.c msdos.c
libcamlrunm_2.2_la_SOURCES = $(LIBSOURCES)
camlrunmd_SOURCES = $(camlrunm_SOURCES) $(LIBSOURCES) debugger.c
camlrunm_CFLAGS = $(CW32_CFLAGS) -fno-defer-pop -fomit-frame-pointer \
	-DTHREADED -Dunix $(am__append_2)
camlrunm_LDADD = $(liblaname)
camlrunm_LDFLAGS = $(CAMLRTLDFLAGS) -rdynamic \
	-Wl,-rpath,$(libdir)/mosml $(am__append_3)
libcamlrunm_2.2_la_CFLAGS = $(camlrunm_CFLAGS)
camlrunmd_CFLAGS = -g -I.. -DDEBUG $(camlrunm_CFLAGS)
camlrunmd_LDFLAGS = $(camlrunm_LDFLAGS) 
nodist_camlrunm_SOURCES = $(BUILT_SOURCES) autoconfig.h
nodist_camlrunmd_SOURCES = $(BUILT_SOURCES) autoconfig.h
camlrunm_instdir = $(includedir)/mosml
libcamlrunm_instdir = $(libdir)/mosml
camlrunm_inst_HEADERS = alloc.h     exec.h      gc.h        io.h       m.h        opnames.h  \
  s.h           unalignd.h \
  autoconfig.h  expand.h    globals.h   jumptbl.h   minor_gc.h  prims.h    signals.h  version.h  \
  callback.h    fail.h      instruct.h  major_gc.h  misc.h      reverse.h  stacks.h \
  config.h      freelist.h  interp.h    md5sum.h    mlvalues.h  roots.h    str.h \
  debugger.h    gc_ctrl.h   intext.h    memory.h    mosml.h     runtime.h  sys.h

CLEANFILES = $(BUILT_SOURCES)
PRIMS = compare.c extern.c   externcp.c floats.c gc_ctrl.c hash.c   \
        intern.c  interncp.c interp.c   ints.c   io.c      lexing.c \
        meta.c    parsing.c  str.c      sys.c    mosml.c   unix.c  \
        md5sum.c  callback.c dynlib.c

all: $(BUILT_SOURCES) autoconfig.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign runtime/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign runtime/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

autoconfig.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/autoconfig.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status runtime/autoconfig.h
$(srcdir)/autoconfig.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f autoconfig.h stamp-h1

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libcamlrunm-2.2.la: $(libcamlrunm_2.2_la_OBJECTS) $(libcamlrunm_2.2_la_DEPENDENCIES) $(EXTRA_libcamlrunm_2.2_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libcamlrunm_2.2_la_LINK) -rpath $(libdir) $(libcamlrunm_2.2_la_OBJECTS) $(libcamlrunm_2.2_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

camlrunm$(EXEEXT): $(camlrunm_OBJECTS) $(camlrunm_DEPENDENCIES) $(EXTRA_camlrunm_DEPENDENCIES) 
	@rm -f camlrunm$(EXEEXT)
	$(AM_V_CCLD)$(camlrunm_LINK) $(camlrunm_OBJECTS) $(camlrunm_LDADD) $(LIBS)

camlrunmd$(EXEEXT): $(camlrunmd_OBJECTS) $(camlrunmd_DEPENDENCIES) $(EXTRA_camlrunmd_DEPENDENCIES) 
	@rm -f camlrunmd$(EXEEXT)
	$(AM_V_CCLD)$(camlrunmd_LINK) $(camlrunmd_OBJECTS) $(camlrunmd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/camlrunm-guilert.Po
include ./$(DEPDIR)/camlrunm-prims.Po
include ./$(DEPDIR)/camlrunmd-alloc.Po
include ./$(DEPDIR)/camlrunmd-callback.Po
include ./$(DEPDIR)/camlrunmd-compare.Po
include ./$(DEPDIR)/camlrunmd-debugger.Po
include ./$(DEPDIR)/camlrunmd-dynlib.Po
include ./$(DEPDIR)/camlrunmd-expand.Po
include ./$(DEPDIR)/camlrunmd-extern.Po
include ./$(DEPDIR)/camlrunmd-externcp.Po
include ./$(DEPDIR)/camlrunmd-fail.Po
include ./$(DEPDIR)/camlrunmd-fix_code.Po
include ./$(DEPDIR)/camlrunmd-floats.Po
include ./$(DEPDIR)/camlrunmd-freelist.Po
include ./$(DEPDIR)/camlrunmd-gc_ctrl.Po
include ./$(DEPDIR)/camlrunmd-guilert.Po
include ./$(DEPDIR)/camlrunmd-hash.Po
include ./$(DEPDIR)/camlrunmd-intern.Po
include ./$(DEPDIR)/camlrunmd-interncp.Po
include ./$(DEPDIR)/camlrunmd-interp.Po
include ./$(DEPDIR)/camlrunmd-ints.Po
include ./$(DEPDIR)/camlrunmd-io.Po
include ./$(DEPDIR)/camlrunmd-lexing.Po
include ./$(DEPDIR)/camlrunmd-main.Po
include ./$(DEPDIR)/camlrunmd-major_gc.Po
include ./$(DEPDIR)/camlrunmd-md5sum.Po
include ./$(DEPDIR)/camlrunmd-memory.Po
include ./$(DEPDIR)/camlrunmd-meta.Po
include ./$(DEPDIR)/camlrunmd-minor_gc.Po
include ./$(DEPDIR)/camlrunmd-misc.Po
include ./$(DEPDIR)/camlrunmd-mosml.Po
include ./$(DEPDIR)/camlrunmd-parsing.Po
include ./$(DEPDIR)/camlrunmd-prims.Po
include ./$(DEPDIR)/camlrunmd-roots.Po
include ./$(DEPDIR)/camlrunmd-runtime.Po
include ./$(DEPDIR)/camlrunmd-signals.Po
include ./$(DEPDIR)/camlrunmd-stacks.Po
include ./$(DEPDIR)/camlrunmd-str.Po
include ./$(DEPDIR)/camlrunmd-sys.Po
include ./$(DEPDIR)/camlrunmd-unix.Po
include ./$(DEPDIR)/libcamlrunm_2.2_la-alloc.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-callback.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-compare.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-dynlib.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-expand.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-extern.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-externcp.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-fail.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-fix_code.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-floats.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-freelist.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-gc_ctrl.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-hash.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-intern.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-interncp.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-interp.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-ints.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-io.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-lexing.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-main.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-major_gc.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-md5sum.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-memory.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-meta.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-minor_gc.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-misc.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-mosml.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-parsing.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-roots.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-runtime.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-signals.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-stacks.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-str.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-sys.Plo
include ./$(DEPDIR)/libcamlrunm_2.2_la-unix.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libcamlrunm_2.2_la-alloc.lo: alloc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-alloc.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-alloc.Tpo -c -o libcamlrunm_2.2_la-alloc.lo `test -f 'alloc.c' || echo '$(srcdir)/'`alloc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-alloc.Tpo $(DEPDIR)/libcamlrunm_2.2_la-alloc.Plo
#	$(AM_V_CC)source='alloc.c' object='libcamlrunm_2.2_la-alloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-alloc.lo `test -f 'alloc.c' || echo '$(srcdir)/'`alloc.c

libcamlrunm_2.2_la-expand.lo: expand.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-expand.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-expand.Tpo -c -o libcamlrunm_2.2_la-expand.lo `test -f 'expand.c' || echo '$(srcdir)/'`expand.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-expand.Tpo $(DEPDIR)/libcamlrunm_2.2_la-expand.Plo
#	$(AM_V_CC)source='expand.c' object='libcamlrunm_2.2_la-expand.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-expand.lo `test -f 'expand.c' || echo '$(srcdir)/'`expand.c

libcamlrunm_2.2_la-floats.lo: floats.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-floats.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-floats.Tpo -c -o libcamlrunm_2.2_la-floats.lo `test -f 'floats.c' || echo '$(srcdir)/'`floats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-floats.Tpo $(DEPDIR)/libcamlrunm_2.2_la-floats.Plo
#	$(AM_V_CC)source='floats.c' object='libcamlrunm_2.2_la-floats.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-floats.lo `test -f 'floats.c' || echo '$(srcdir)/'`floats.c

libcamlrunm_2.2_la-intern.lo: intern.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-intern.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-intern.Tpo -c -o libcamlrunm_2.2_la-intern.lo `test -f 'intern.c' || echo '$(srcdir)/'`intern.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-intern.Tpo $(DEPDIR)/libcamlrunm_2.2_la-intern.Plo
#	$(AM_V_CC)source='intern.c' object='libcamlrunm_2.2_la-intern.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-intern.lo `test -f 'intern.c' || echo '$(srcdir)/'`intern.c

libcamlrunm_2.2_la-lexing.lo: lexing.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-lexing.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-lexing.Tpo -c -o libcamlrunm_2.2_la-lexing.lo `test -f 'lexing.c' || echo '$(srcdir)/'`lexing.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-lexing.Tpo $(DEPDIR)/libcamlrunm_2.2_la-lexing.Plo
#	$(AM_V_CC)source='lexing.c' object='libcamlrunm_2.2_la-lexing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-lexing.lo `test -f 'lexing.c' || echo '$(srcdir)/'`lexing.c

libcamlrunm_2.2_la-meta.lo: meta.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-meta.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-meta.Tpo -c -o libcamlrunm_2.2_la-meta.lo `test -f 'meta.c' || echo '$(srcdir)/'`meta.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-meta.Tpo $(DEPDIR)/libcamlrunm_2.2_la-meta.Plo
#	$(AM_V_CC)source='meta.c' object='libcamlrunm_2.2_la-meta.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-meta.lo `test -f 'meta.c' || echo '$(srcdir)/'`meta.c

libcamlrunm_2.2_la-parsing.lo: parsing.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-parsing.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-parsing.Tpo -c -o libcamlrunm_2.2_la-parsing.lo `test -f 'parsing.c' || echo '$(srcdir)/'`parsing.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-parsing.Tpo $(DEPDIR)/libcamlrunm_2.2_la-parsing.Plo
#	$(AM_V_CC)source='parsing.c' object='libcamlrunm_2.2_la-parsing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-parsing.lo `test -f 'parsing.c' || echo '$(srcdir)/'`parsing.c

libcamlrunm_2.2_la-str.lo: str.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-str.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-str.Tpo -c -o libcamlrunm_2.2_la-str.lo `test -f 'str.c' || echo '$(srcdir)/'`str.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-str.Tpo $(DEPDIR)/libcamlrunm_2.2_la-str.Plo
#	$(AM_V_CC)source='str.c' object='libcamlrunm_2.2_la-str.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-str.lo `test -f 'str.c' || echo '$(srcdir)/'`str.c

libcamlrunm_2.2_la-callback.lo: callback.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-callback.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-callback.Tpo -c -o libcamlrunm_2.2_la-callback.lo `test -f 'callback.c' || echo '$(srcdir)/'`callback.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-callback.Tpo $(DEPDIR)/libcamlrunm_2.2_la-callback.Plo
#	$(AM_V_CC)source='callback.c' object='libcamlrunm_2.2_la-callback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-callback.lo `test -f 'callback.c' || echo '$(srcdir)/'`callback.c

libcamlrunm_2.2_la-extern.lo: extern.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-extern.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-extern.Tpo -c -o libcamlrunm_2.2_la-extern.lo `test -f 'extern.c' || echo '$(srcdir)/'`extern.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-extern.Tpo $(DEPDIR)/libcamlrunm_2.2_la-extern.Plo
#	$(AM_V_CC)source='extern.c' object='libcamlrunm_2.2_la-extern.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-extern.lo `test -f 'extern.c' || echo '$(srcdir)/'`extern.c

libcamlrunm_2.2_la-freelist.lo: freelist.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-freelist.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-freelist.Tpo -c -o libcamlrunm_2.2_la-freelist.lo `test -f 'freelist.c' || echo '$(srcdir)/'`freelist.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-freelist.Tpo $(DEPDIR)/libcamlrunm_2.2_la-freelist.Plo
#	$(AM_V_CC)source='freelist.c' object='libcamlrunm_2.2_la-freelist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-freelist.lo `test -f 'freelist.c' || echo '$(srcdir)/'`freelist.c

libcamlrunm_2.2_la-interncp.lo: interncp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-interncp.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-interncp.Tpo -c -o libcamlrunm_2.2_la-interncp.lo `test -f 'interncp.c' || echo '$(srcdir)/'`interncp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-interncp.Tpo $(DEPDIR)/libcamlrunm_2.2_la-interncp.Plo
#	$(AM_V_CC)source='interncp.c' object='libcamlrunm_2.2_la-interncp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-interncp.lo `test -f 'interncp.c' || echo '$(srcdir)/'`interncp.c

libcamlrunm_2.2_la-main.lo: main.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-main.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-main.Tpo -c -o libcamlrunm_2.2_la-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-main.Tpo $(DEPDIR)/libcamlrunm_2.2_la-main.Plo
#	$(AM_V_CC)source='main.c' object='libcamlrunm_2.2_la-main.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c

libcamlrunm_2.2_la-minor_gc.lo: minor_gc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-minor_gc.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-minor_gc.Tpo -c -o libcamlrunm_2.2_la-minor_gc.lo `test -f 'minor_gc.c' || echo '$(srcdir)/'`minor_gc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-minor_gc.Tpo $(DEPDIR)/libcamlrunm_2.2_la-minor_gc.Plo
#	$(AM_V_CC)source='minor_gc.c' object='libcamlrunm_2.2_la-minor_gc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-minor_gc.lo `test -f 'minor_gc.c' || echo '$(srcdir)/'`minor_gc.c

libcamlrunm_2.2_la-roots.lo: roots.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-roots.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-roots.Tpo -c -o libcamlrunm_2.2_la-roots.lo `test -f 'roots.c' || echo '$(srcdir)/'`roots.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-roots.Tpo $(DEPDIR)/libcamlrunm_2.2_la-roots.Plo
#	$(AM_V_CC)source='roots.c' object='libcamlrunm_2.2_la-roots.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-roots.lo `test -f 'roots.c' || echo '$(srcdir)/'`roots.c

libcamlrunm_2.2_la-sys.lo: sys.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-sys.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-sys.Tpo -c -o libcamlrunm_2.2_la-sys.lo `test -f 'sys.c' || echo '$(srcdir)/'`sys.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-sys.Tpo $(DEPDIR)/libcamlrunm_2.2_la-sys.Plo
#	$(AM_V_CC)source='sys.c' object='libcamlrunm_2.2_la-sys.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-sys.lo `test -f 'sys.c' || echo '$(srcdir)/'`sys.c

libcamlrunm_2.2_la-compare.lo: compare.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-compare.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-compare.Tpo -c -o libcamlrunm_2.2_la-compare.lo `test -f 'compare.c' || echo '$(srcdir)/'`compare.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-compare.Tpo $(DEPDIR)/libcamlrunm_2.2_la-compare.Plo
#	$(AM_V_CC)source='compare.c' object='libcamlrunm_2.2_la-compare.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-compare.lo `test -f 'compare.c' || echo '$(srcdir)/'`compare.c

libcamlrunm_2.2_la-externcp.lo: externcp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-externcp.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-externcp.Tpo -c -o libcamlrunm_2.2_la-externcp.lo `test -f 'externcp.c' || echo '$(srcdir)/'`externcp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-externcp.Tpo $(DEPDIR)/libcamlrunm_2.2_la-externcp.Plo
#	$(AM_V_CC)source='externcp.c' object='libcamlrunm_2.2_la-externcp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-externcp.lo `test -f 'externcp.c' || echo '$(srcdir)/'`externcp.c

libcamlrunm_2.2_la-gc_ctrl.lo: gc_ctrl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-gc_ctrl.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-gc_ctrl.Tpo -c -o libcamlrunm_2.2_la-gc_ctrl.lo `test -f 'gc_ctrl.c' || echo '$(srcdir)/'`gc_ctrl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-gc_ctrl.Tpo $(DEPDIR)/libcamlrunm_2.2_la-gc_ctrl.Plo
#	$(AM_V_CC)source='gc_ctrl.c' object='libcamlrunm_2.2_la-gc_ctrl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-gc_ctrl.lo `test -f 'gc_ctrl.c' || echo '$(srcdir)/'`gc_ctrl.c

libcamlrunm_2.2_la-interp.lo: interp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-interp.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-interp.Tpo -c -o libcamlrunm_2.2_la-interp.lo `test -f 'interp.c' || echo '$(srcdir)/'`interp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-interp.Tpo $(DEPDIR)/libcamlrunm_2.2_la-interp.Plo
#	$(AM_V_CC)source='interp.c' object='libcamlrunm_2.2_la-interp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-interp.lo `test -f 'interp.c' || echo '$(srcdir)/'`interp.c

libcamlrunm_2.2_la-major_gc.lo: major_gc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-major_gc.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-major_gc.Tpo -c -o libcamlrunm_2.2_la-major_gc.lo `test -f 'major_gc.c' || echo '$(srcdir)/'`major_gc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-major_gc.Tpo $(DEPDIR)/libcamlrunm_2.2_la-major_gc.Plo
#	$(AM_V_CC)source='major_gc.c' object='libcamlrunm_2.2_la-major_gc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-major_gc.lo `test -f 'major_gc.c' || echo '$(srcdir)/'`major_gc.c

libcamlrunm_2.2_la-misc.lo: misc.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-misc.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-misc.Tpo -c -o libcamlrunm_2.2_la-misc.lo `test -f 'misc.c' || echo '$(srcdir)/'`misc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-misc.Tpo $(DEPDIR)/libcamlrunm_2.2_la-misc.Plo
#	$(AM_V_CC)source='misc.c' object='libcamlrunm_2.2_la-misc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-misc.lo `test -f 'misc.c' || echo '$(srcdir)/'`misc.c

libcamlrunm_2.2_la-runtime.lo: runtime.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-runtime.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-runtime.Tpo -c -o libcamlrunm_2.2_la-runtime.lo `test -f 'runtime.c' || echo '$(srcdir)/'`runtime.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-runtime.Tpo $(DEPDIR)/libcamlrunm_2.2_la-runtime.Plo
#	$(AM_V_CC)source='runtime.c' object='libcamlrunm_2.2_la-runtime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-runtime.lo `test -f 'runtime.c' || echo '$(srcdir)/'`runtime.c

libcamlrunm_2.2_la-unix.lo: unix.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-unix.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-unix.Tpo -c -o libcamlrunm_2.2_la-unix.lo `test -f 'unix.c' || echo '$(srcdir)/'`unix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-unix.Tpo $(DEPDIR)/libcamlrunm_2.2_la-unix.Plo
#	$(AM_V_CC)source='unix.c' object='libcamlrunm_2.2_la-unix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-unix.lo `test -f 'unix.c' || echo '$(srcdir)/'`unix.c

libcamlrunm_2.2_la-fail.lo: fail.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-fail.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-fail.Tpo -c -o libcamlrunm_2.2_la-fail.lo `test -f 'fail.c' || echo '$(srcdir)/'`fail.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-fail.Tpo $(DEPDIR)/libcamlrunm_2.2_la-fail.Plo
#	$(AM_V_CC)source='fail.c' object='libcamlrunm_2.2_la-fail.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-fail.lo `test -f 'fail.c' || echo '$(srcdir)/'`fail.c

libcamlrunm_2.2_la-ints.lo: ints.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-ints.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-ints.Tpo -c -o libcamlrunm_2.2_la-ints.lo `test -f 'ints.c' || echo '$(srcdir)/'`ints.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-ints.Tpo $(DEPDIR)/libcamlrunm_2.2_la-ints.Plo
#	$(AM_V_CC)source='ints.c' object='libcamlrunm_2.2_la-ints.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-ints.lo `test -f 'ints.c' || echo '$(srcdir)/'`ints.c

libcamlrunm_2.2_la-md5sum.lo: md5sum.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-md5sum.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-md5sum.Tpo -c -o libcamlrunm_2.2_la-md5sum.lo `test -f 'md5sum.c' || echo '$(srcdir)/'`md5sum.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-md5sum.Tpo $(DEPDIR)/libcamlrunm_2.2_la-md5sum.Plo
#	$(AM_V_CC)source='md5sum.c' object='libcamlrunm_2.2_la-md5sum.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-md5sum.lo `test -f 'md5sum.c' || echo '$(srcdir)/'`md5sum.c

libcamlrunm_2.2_la-mosml.lo: mosml.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-mosml.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-mosml.Tpo -c -o libcamlrunm_2.2_la-mosml.lo `test -f 'mosml.c' || echo '$(srcdir)/'`mosml.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-mosml.Tpo $(DEPDIR)/libcamlrunm_2.2_la-mosml.Plo
#	$(AM_V_CC)source='mosml.c' object='libcamlrunm_2.2_la-mosml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-mosml.lo `test -f 'mosml.c' || echo '$(srcdir)/'`mosml.c

libcamlrunm_2.2_la-signals.lo: signals.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-signals.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-signals.Tpo -c -o libcamlrunm_2.2_la-signals.lo `test -f 'signals.c' || echo '$(srcdir)/'`signals.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-signals.Tpo $(DEPDIR)/libcamlrunm_2.2_la-signals.Plo
#	$(AM_V_CC)source='signals.c' object='libcamlrunm_2.2_la-signals.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-signals.lo `test -f 'signals.c' || echo '$(srcdir)/'`signals.c

libcamlrunm_2.2_la-dynlib.lo: dynlib.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-dynlib.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-dynlib.Tpo -c -o libcamlrunm_2.2_la-dynlib.lo `test -f 'dynlib.c' || echo '$(srcdir)/'`dynlib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-dynlib.Tpo $(DEPDIR)/libcamlrunm_2.2_la-dynlib.Plo
#	$(AM_V_CC)source='dynlib.c' object='libcamlrunm_2.2_la-dynlib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-dynlib.lo `test -f 'dynlib.c' || echo '$(srcdir)/'`dynlib.c

libcamlrunm_2.2_la-fix_code.lo: fix_code.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-fix_code.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-fix_code.Tpo -c -o libcamlrunm_2.2_la-fix_code.lo `test -f 'fix_code.c' || echo '$(srcdir)/'`fix_code.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-fix_code.Tpo $(DEPDIR)/libcamlrunm_2.2_la-fix_code.Plo
#	$(AM_V_CC)source='fix_code.c' object='libcamlrunm_2.2_la-fix_code.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-fix_code.lo `test -f 'fix_code.c' || echo '$(srcdir)/'`fix_code.c

libcamlrunm_2.2_la-hash.lo: hash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-hash.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-hash.Tpo -c -o libcamlrunm_2.2_la-hash.lo `test -f 'hash.c' || echo '$(srcdir)/'`hash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-hash.Tpo $(DEPDIR)/libcamlrunm_2.2_la-hash.Plo
#	$(AM_V_CC)source='hash.c' object='libcamlrunm_2.2_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-hash.lo `test -f 'hash.c' || echo '$(srcdir)/'`hash.c

libcamlrunm_2.2_la-io.lo: io.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-io.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-io.Tpo -c -o libcamlrunm_2.2_la-io.lo `test -f 'io.c' || echo '$(srcdir)/'`io.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-io.Tpo $(DEPDIR)/libcamlrunm_2.2_la-io.Plo
#	$(AM_V_CC)source='io.c' object='libcamlrunm_2.2_la-io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-io.lo `test -f 'io.c' || echo '$(srcdir)/'`io.c

libcamlrunm_2.2_la-memory.lo: memory.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-memory.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-memory.Tpo -c -o libcamlrunm_2.2_la-memory.lo `test -f 'memory.c' || echo '$(srcdir)/'`memory.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-memory.Tpo $(DEPDIR)/libcamlrunm_2.2_la-memory.Plo
#	$(AM_V_CC)source='memory.c' object='libcamlrunm_2.2_la-memory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-memory.lo `test -f 'memory.c' || echo '$(srcdir)/'`memory.c

libcamlrunm_2.2_la-stacks.lo: stacks.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -MT libcamlrunm_2.2_la-stacks.lo -MD -MP -MF $(DEPDIR)/libcamlrunm_2.2_la-stacks.Tpo -c -o libcamlrunm_2.2_la-stacks.lo `test -f 'stacks.c' || echo '$(srcdir)/'`stacks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcamlrunm_2.2_la-stacks.Tpo $(DEPDIR)/libcamlrunm_2.2_la-stacks.Plo
#	$(AM_V_CC)source='stacks.c' object='libcamlrunm_2.2_la-stacks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcamlrunm_2.2_la_CFLAGS) $(CFLAGS) -c -o libcamlrunm_2.2_la-stacks.lo `test -f 'stacks.c' || echo '$(srcdir)/'`stacks.c

camlrunm-guilert.o: guilert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunm_CFLAGS) $(CFLAGS) -MT camlrunm-guilert.o -MD -MP -MF $(DEPDIR)/camlrunm-guilert.Tpo -c -o camlrunm-guilert.o `test -f 'guilert.c' || echo '$(srcdir)/'`guilert.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunm-guilert.Tpo $(DEPDIR)/camlrunm-guilert.Po
#	$(AM_V_CC)source='guilert.c' object='camlrunm-guilert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunm_CFLAGS) $(CFLAGS) -c -o camlrunm-guilert.o `test -f 'guilert.c' || echo '$(srcdir)/'`guilert.c

camlrunm-guilert.obj: guilert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunm_CFLAGS) $(CFLAGS) -MT camlrunm-guilert.obj -MD -MP -MF $(DEPDIR)/camlrunm-guilert.Tpo -c -o camlrunm-guilert.obj `if test -f 'guilert.c'; then $(CYGPATH_W) 'guilert.c'; else $(CYGPATH_W) '$(srcdir)/guilert.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunm-guilert.Tpo $(DEPDIR)/camlrunm-guilert.Po
#	$(AM_V_CC)source='guilert.c' object='camlrunm-guilert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunm_CFLAGS) $(CFLAGS) -c -o camlrunm-guilert.obj `if test -f 'guilert.c'; then $(CYGPATH_W) 'guilert.c'; else $(CYGPATH_W) '$(srcdir)/guilert.c'; fi`

camlrunm-prims.o: prims.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunm_CFLAGS) $(CFLAGS) -MT camlrunm-prims.o -MD -MP -MF $(DEPDIR)/camlrunm-prims.Tpo -c -o camlrunm-prims.o `test -f 'prims.c' || echo '$(srcdir)/'`prims.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunm-prims.Tpo $(DEPDIR)/camlrunm-prims.Po
#	$(AM_V_CC)source='prims.c' object='camlrunm-prims.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunm_CFLAGS) $(CFLAGS) -c -o camlrunm-prims.o `test -f 'prims.c' || echo '$(srcdir)/'`prims.c

camlrunm-prims.obj: prims.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunm_CFLAGS) $(CFLAGS) -MT camlrunm-prims.obj -MD -MP -MF $(DEPDIR)/camlrunm-prims.Tpo -c -o camlrunm-prims.obj `if test -f 'prims.c'; then $(CYGPATH_W) 'prims.c'; else $(CYGPATH_W) '$(srcdir)/prims.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunm-prims.Tpo $(DEPDIR)/camlrunm-prims.Po
#	$(AM_V_CC)source='prims.c' object='camlrunm-prims.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunm_CFLAGS) $(CFLAGS) -c -o camlrunm-prims.obj `if test -f 'prims.c'; then $(CYGPATH_W) 'prims.c'; else $(CYGPATH_W) '$(srcdir)/prims.c'; fi`

camlrunmd-guilert.o: guilert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-guilert.o -MD -MP -MF $(DEPDIR)/camlrunmd-guilert.Tpo -c -o camlrunmd-guilert.o `test -f 'guilert.c' || echo '$(srcdir)/'`guilert.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-guilert.Tpo $(DEPDIR)/camlrunmd-guilert.Po
#	$(AM_V_CC)source='guilert.c' object='camlrunmd-guilert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-guilert.o `test -f 'guilert.c' || echo '$(srcdir)/'`guilert.c

camlrunmd-guilert.obj: guilert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-guilert.obj -MD -MP -MF $(DEPDIR)/camlrunmd-guilert.Tpo -c -o camlrunmd-guilert.obj `if test -f 'guilert.c'; then $(CYGPATH_W) 'guilert.c'; else $(CYGPATH_W) '$(srcdir)/guilert.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-guilert.Tpo $(DEPDIR)/camlrunmd-guilert.Po
#	$(AM_V_CC)source='guilert.c' object='camlrunmd-guilert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-guilert.obj `if test -f 'guilert.c'; then $(CYGPATH_W) 'guilert.c'; else $(CYGPATH_W) '$(srcdir)/guilert.c'; fi`

camlrunmd-alloc.o: alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-alloc.o -MD -MP -MF $(DEPDIR)/camlrunmd-alloc.Tpo -c -o camlrunmd-alloc.o `test -f 'alloc.c' || echo '$(srcdir)/'`alloc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-alloc.Tpo $(DEPDIR)/camlrunmd-alloc.Po
#	$(AM_V_CC)source='alloc.c' object='camlrunmd-alloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-alloc.o `test -f 'alloc.c' || echo '$(srcdir)/'`alloc.c

camlrunmd-alloc.obj: alloc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-alloc.obj -MD -MP -MF $(DEPDIR)/camlrunmd-alloc.Tpo -c -o camlrunmd-alloc.obj `if test -f 'alloc.c'; then $(CYGPATH_W) 'alloc.c'; else $(CYGPATH_W) '$(srcdir)/alloc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-alloc.Tpo $(DEPDIR)/camlrunmd-alloc.Po
#	$(AM_V_CC)source='alloc.c' object='camlrunmd-alloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-alloc.obj `if test -f 'alloc.c'; then $(CYGPATH_W) 'alloc.c'; else $(CYGPATH_W) '$(srcdir)/alloc.c'; fi`

camlrunmd-expand.o: expand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-expand.o -MD -MP -MF $(DEPDIR)/camlrunmd-expand.Tpo -c -o camlrunmd-expand.o `test -f 'expand.c' || echo '$(srcdir)/'`expand.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-expand.Tpo $(DEPDIR)/camlrunmd-expand.Po
#	$(AM_V_CC)source='expand.c' object='camlrunmd-expand.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-expand.o `test -f 'expand.c' || echo '$(srcdir)/'`expand.c

camlrunmd-expand.obj: expand.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-expand.obj -MD -MP -MF $(DEPDIR)/camlrunmd-expand.Tpo -c -o camlrunmd-expand.obj `if test -f 'expand.c'; then $(CYGPATH_W) 'expand.c'; else $(CYGPATH_W) '$(srcdir)/expand.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-expand.Tpo $(DEPDIR)/camlrunmd-expand.Po
#	$(AM_V_CC)source='expand.c' object='camlrunmd-expand.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-expand.obj `if test -f 'expand.c'; then $(CYGPATH_W) 'expand.c'; else $(CYGPATH_W) '$(srcdir)/expand.c'; fi`

camlrunmd-floats.o: floats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-floats.o -MD -MP -MF $(DEPDIR)/camlrunmd-floats.Tpo -c -o camlrunmd-floats.o `test -f 'floats.c' || echo '$(srcdir)/'`floats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-floats.Tpo $(DEPDIR)/camlrunmd-floats.Po
#	$(AM_V_CC)source='floats.c' object='camlrunmd-floats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-floats.o `test -f 'floats.c' || echo '$(srcdir)/'`floats.c

camlrunmd-floats.obj: floats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-floats.obj -MD -MP -MF $(DEPDIR)/camlrunmd-floats.Tpo -c -o camlrunmd-floats.obj `if test -f 'floats.c'; then $(CYGPATH_W) 'floats.c'; else $(CYGPATH_W) '$(srcdir)/floats.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-floats.Tpo $(DEPDIR)/camlrunmd-floats.Po
#	$(AM_V_CC)source='floats.c' object='camlrunmd-floats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-floats.obj `if test -f 'floats.c'; then $(CYGPATH_W) 'floats.c'; else $(CYGPATH_W) '$(srcdir)/floats.c'; fi`

camlrunmd-intern.o: intern.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-intern.o -MD -MP -MF $(DEPDIR)/camlrunmd-intern.Tpo -c -o camlrunmd-intern.o `test -f 'intern.c' || echo '$(srcdir)/'`intern.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-intern.Tpo $(DEPDIR)/camlrunmd-intern.Po
#	$(AM_V_CC)source='intern.c' object='camlrunmd-intern.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-intern.o `test -f 'intern.c' || echo '$(srcdir)/'`intern.c

camlrunmd-intern.obj: intern.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-intern.obj -MD -MP -MF $(DEPDIR)/camlrunmd-intern.Tpo -c -o camlrunmd-intern.obj `if test -f 'intern.c'; then $(CYGPATH_W) 'intern.c'; else $(CYGPATH_W) '$(srcdir)/intern.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-intern.Tpo $(DEPDIR)/camlrunmd-intern.Po
#	$(AM_V_CC)source='intern.c' object='camlrunmd-intern.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-intern.obj `if test -f 'intern.c'; then $(CYGPATH_W) 'intern.c'; else $(CYGPATH_W) '$(srcdir)/intern.c'; fi`

camlrunmd-lexing.o: lexing.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-lexing.o -MD -MP -MF $(DEPDIR)/camlrunmd-lexing.Tpo -c -o camlrunmd-lexing.o `test -f 'lexing.c' || echo '$(srcdir)/'`lexing.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-lexing.Tpo $(DEPDIR)/camlrunmd-lexing.Po
#	$(AM_V_CC)source='lexing.c' object='camlrunmd-lexing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-lexing.o `test -f 'lexing.c' || echo '$(srcdir)/'`lexing.c

camlrunmd-lexing.obj: lexing.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-lexing.obj -MD -MP -MF $(DEPDIR)/camlrunmd-lexing.Tpo -c -o camlrunmd-lexing.obj `if test -f 'lexing.c'; then $(CYGPATH_W) 'lexing.c'; else $(CYGPATH_W) '$(srcdir)/lexing.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-lexing.Tpo $(DEPDIR)/camlrunmd-lexing.Po
#	$(AM_V_CC)source='lexing.c' object='camlrunmd-lexing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-lexing.obj `if test -f 'lexing.c'; then $(CYGPATH_W) 'lexing.c'; else $(CYGPATH_W) '$(srcdir)/lexing.c'; fi`

camlrunmd-meta.o: meta.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-meta.o -MD -MP -MF $(DEPDIR)/camlrunmd-meta.Tpo -c -o camlrunmd-meta.o `test -f 'meta.c' || echo '$(srcdir)/'`meta.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-meta.Tpo $(DEPDIR)/camlrunmd-meta.Po
#	$(AM_V_CC)source='meta.c' object='camlrunmd-meta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-meta.o `test -f 'meta.c' || echo '$(srcdir)/'`meta.c

camlrunmd-meta.obj: meta.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-meta.obj -MD -MP -MF $(DEPDIR)/camlrunmd-meta.Tpo -c -o camlrunmd-meta.obj `if test -f 'meta.c'; then $(CYGPATH_W) 'meta.c'; else $(CYGPATH_W) '$(srcdir)/meta.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-meta.Tpo $(DEPDIR)/camlrunmd-meta.Po
#	$(AM_V_CC)source='meta.c' object='camlrunmd-meta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-meta.obj `if test -f 'meta.c'; then $(CYGPATH_W) 'meta.c'; else $(CYGPATH_W) '$(srcdir)/meta.c'; fi`

camlrunmd-parsing.o: parsing.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-parsing.o -MD -MP -MF $(DEPDIR)/camlrunmd-parsing.Tpo -c -o camlrunmd-parsing.o `test -f 'parsing.c' || echo '$(srcdir)/'`parsing.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-parsing.Tpo $(DEPDIR)/camlrunmd-parsing.Po
#	$(AM_V_CC)source='parsing.c' object='camlrunmd-parsing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-parsing.o `test -f 'parsing.c' || echo '$(srcdir)/'`parsing.c

camlrunmd-parsing.obj: parsing.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-parsing.obj -MD -MP -MF $(DEPDIR)/camlrunmd-parsing.Tpo -c -o camlrunmd-parsing.obj `if test -f 'parsing.c'; then $(CYGPATH_W) 'parsing.c'; else $(CYGPATH_W) '$(srcdir)/parsing.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-parsing.Tpo $(DEPDIR)/camlrunmd-parsing.Po
#	$(AM_V_CC)source='parsing.c' object='camlrunmd-parsing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-parsing.obj `if test -f 'parsing.c'; then $(CYGPATH_W) 'parsing.c'; else $(CYGPATH_W) '$(srcdir)/parsing.c'; fi`

camlrunmd-str.o: str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-str.o -MD -MP -MF $(DEPDIR)/camlrunmd-str.Tpo -c -o camlrunmd-str.o `test -f 'str.c' || echo '$(srcdir)/'`str.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-str.Tpo $(DEPDIR)/camlrunmd-str.Po
#	$(AM_V_CC)source='str.c' object='camlrunmd-str.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-str.o `test -f 'str.c' || echo '$(srcdir)/'`str.c

camlrunmd-str.obj: str.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-str.obj -MD -MP -MF $(DEPDIR)/camlrunmd-str.Tpo -c -o camlrunmd-str.obj `if test -f 'str.c'; then $(CYGPATH_W) 'str.c'; else $(CYGPATH_W) '$(srcdir)/str.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-str.Tpo $(DEPDIR)/camlrunmd-str.Po
#	$(AM_V_CC)source='str.c' object='camlrunmd-str.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-str.obj `if test -f 'str.c'; then $(CYGPATH_W) 'str.c'; else $(CYGPATH_W) '$(srcdir)/str.c'; fi`

camlrunmd-callback.o: callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-callback.o -MD -MP -MF $(DEPDIR)/camlrunmd-callback.Tpo -c -o camlrunmd-callback.o `test -f 'callback.c' || echo '$(srcdir)/'`callback.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-callback.Tpo $(DEPDIR)/camlrunmd-callback.Po
#	$(AM_V_CC)source='callback.c' object='camlrunmd-callback.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-callback.o `test -f 'callback.c' || echo '$(srcdir)/'`callback.c

camlrunmd-callback.obj: callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-callback.obj -MD -MP -MF $(DEPDIR)/camlrunmd-callback.Tpo -c -o camlrunmd-callback.obj `if test -f 'callback.c'; then $(CYGPATH_W) 'callback.c'; else $(CYGPATH_W) '$(srcdir)/callback.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-callback.Tpo $(DEPDIR)/camlrunmd-callback.Po
#	$(AM_V_CC)source='callback.c' object='camlrunmd-callback.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-callback.obj `if test -f 'callback.c'; then $(CYGPATH_W) 'callback.c'; else $(CYGPATH_W) '$(srcdir)/callback.c'; fi`

camlrunmd-extern.o: extern.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-extern.o -MD -MP -MF $(DEPDIR)/camlrunmd-extern.Tpo -c -o camlrunmd-extern.o `test -f 'extern.c' || echo '$(srcdir)/'`extern.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-extern.Tpo $(DEPDIR)/camlrunmd-extern.Po
#	$(AM_V_CC)source='extern.c' object='camlrunmd-extern.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-extern.o `test -f 'extern.c' || echo '$(srcdir)/'`extern.c

camlrunmd-extern.obj: extern.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-extern.obj -MD -MP -MF $(DEPDIR)/camlrunmd-extern.Tpo -c -o camlrunmd-extern.obj `if test -f 'extern.c'; then $(CYGPATH_W) 'extern.c'; else $(CYGPATH_W) '$(srcdir)/extern.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-extern.Tpo $(DEPDIR)/camlrunmd-extern.Po
#	$(AM_V_CC)source='extern.c' object='camlrunmd-extern.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-extern.obj `if test -f 'extern.c'; then $(CYGPATH_W) 'extern.c'; else $(CYGPATH_W) '$(srcdir)/extern.c'; fi`

camlrunmd-freelist.o: freelist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-freelist.o -MD -MP -MF $(DEPDIR)/camlrunmd-freelist.Tpo -c -o camlrunmd-freelist.o `test -f 'freelist.c' || echo '$(srcdir)/'`freelist.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-freelist.Tpo $(DEPDIR)/camlrunmd-freelist.Po
#	$(AM_V_CC)source='freelist.c' object='camlrunmd-freelist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-freelist.o `test -f 'freelist.c' || echo '$(srcdir)/'`freelist.c

camlrunmd-freelist.obj: freelist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-freelist.obj -MD -MP -MF $(DEPDIR)/camlrunmd-freelist.Tpo -c -o camlrunmd-freelist.obj `if test -f 'freelist.c'; then $(CYGPATH_W) 'freelist.c'; else $(CYGPATH_W) '$(srcdir)/freelist.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-freelist.Tpo $(DEPDIR)/camlrunmd-freelist.Po
#	$(AM_V_CC)source='freelist.c' object='camlrunmd-freelist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-freelist.obj `if test -f 'freelist.c'; then $(CYGPATH_W) 'freelist.c'; else $(CYGPATH_W) '$(srcdir)/freelist.c'; fi`

camlrunmd-interncp.o: interncp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-interncp.o -MD -MP -MF $(DEPDIR)/camlrunmd-interncp.Tpo -c -o camlrunmd-interncp.o `test -f 'interncp.c' || echo '$(srcdir)/'`interncp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-interncp.Tpo $(DEPDIR)/camlrunmd-interncp.Po
#	$(AM_V_CC)source='interncp.c' object='camlrunmd-interncp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-interncp.o `test -f 'interncp.c' || echo '$(srcdir)/'`interncp.c

camlrunmd-interncp.obj: interncp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-interncp.obj -MD -MP -MF $(DEPDIR)/camlrunmd-interncp.Tpo -c -o camlrunmd-interncp.obj `if test -f 'interncp.c'; then $(CYGPATH_W) 'interncp.c'; else $(CYGPATH_W) '$(srcdir)/interncp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-interncp.Tpo $(DEPDIR)/camlrunmd-interncp.Po
#	$(AM_V_CC)source='interncp.c' object='camlrunmd-interncp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-interncp.obj `if test -f 'interncp.c'; then $(CYGPATH_W) 'interncp.c'; else $(CYGPATH_W) '$(srcdir)/interncp.c'; fi`

camlrunmd-main.o: main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-main.o -MD -MP -MF $(DEPDIR)/camlrunmd-main.Tpo -c -o camlrunmd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-main.Tpo $(DEPDIR)/camlrunmd-main.Po
#	$(AM_V_CC)source='main.c' object='camlrunmd-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

camlrunmd-main.obj: main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-main.obj -MD -MP -MF $(DEPDIR)/camlrunmd-main.Tpo -c -o camlrunmd-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-main.Tpo $(DEPDIR)/camlrunmd-main.Po
#	$(AM_V_CC)source='main.c' object='camlrunmd-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

camlrunmd-minor_gc.o: minor_gc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-minor_gc.o -MD -MP -MF $(DEPDIR)/camlrunmd-minor_gc.Tpo -c -o camlrunmd-minor_gc.o `test -f 'minor_gc.c' || echo '$(srcdir)/'`minor_gc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-minor_gc.Tpo $(DEPDIR)/camlrunmd-minor_gc.Po
#	$(AM_V_CC)source='minor_gc.c' object='camlrunmd-minor_gc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-minor_gc.o `test -f 'minor_gc.c' || echo '$(srcdir)/'`minor_gc.c

camlrunmd-minor_gc.obj: minor_gc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-minor_gc.obj -MD -MP -MF $(DEPDIR)/camlrunmd-minor_gc.Tpo -c -o camlrunmd-minor_gc.obj `if test -f 'minor_gc.c'; then $(CYGPATH_W) 'minor_gc.c'; else $(CYGPATH_W) '$(srcdir)/minor_gc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-minor_gc.Tpo $(DEPDIR)/camlrunmd-minor_gc.Po
#	$(AM_V_CC)source='minor_gc.c' object='camlrunmd-minor_gc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-minor_gc.obj `if test -f 'minor_gc.c'; then $(CYGPATH_W) 'minor_gc.c'; else $(CYGPATH_W) '$(srcdir)/minor_gc.c'; fi`

camlrunmd-roots.o: roots.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-roots.o -MD -MP -MF $(DEPDIR)/camlrunmd-roots.Tpo -c -o camlrunmd-roots.o `test -f 'roots.c' || echo '$(srcdir)/'`roots.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-roots.Tpo $(DEPDIR)/camlrunmd-roots.Po
#	$(AM_V_CC)source='roots.c' object='camlrunmd-roots.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-roots.o `test -f 'roots.c' || echo '$(srcdir)/'`roots.c

camlrunmd-roots.obj: roots.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-roots.obj -MD -MP -MF $(DEPDIR)/camlrunmd-roots.Tpo -c -o camlrunmd-roots.obj `if test -f 'roots.c'; then $(CYGPATH_W) 'roots.c'; else $(CYGPATH_W) '$(srcdir)/roots.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-roots.Tpo $(DEPDIR)/camlrunmd-roots.Po
#	$(AM_V_CC)source='roots.c' object='camlrunmd-roots.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-roots.obj `if test -f 'roots.c'; then $(CYGPATH_W) 'roots.c'; else $(CYGPATH_W) '$(srcdir)/roots.c'; fi`

camlrunmd-sys.o: sys.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-sys.o -MD -MP -MF $(DEPDIR)/camlrunmd-sys.Tpo -c -o camlrunmd-sys.o `test -f 'sys.c' || echo '$(srcdir)/'`sys.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-sys.Tpo $(DEPDIR)/camlrunmd-sys.Po
#	$(AM_V_CC)source='sys.c' object='camlrunmd-sys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-sys.o `test -f 'sys.c' || echo '$(srcdir)/'`sys.c

camlrunmd-sys.obj: sys.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-sys.obj -MD -MP -MF $(DEPDIR)/camlrunmd-sys.Tpo -c -o camlrunmd-sys.obj `if test -f 'sys.c'; then $(CYGPATH_W) 'sys.c'; else $(CYGPATH_W) '$(srcdir)/sys.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-sys.Tpo $(DEPDIR)/camlrunmd-sys.Po
#	$(AM_V_CC)source='sys.c' object='camlrunmd-sys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-sys.obj `if test -f 'sys.c'; then $(CYGPATH_W) 'sys.c'; else $(CYGPATH_W) '$(srcdir)/sys.c'; fi`

camlrunmd-compare.o: compare.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-compare.o -MD -MP -MF $(DEPDIR)/camlrunmd-compare.Tpo -c -o camlrunmd-compare.o `test -f 'compare.c' || echo '$(srcdir)/'`compare.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-compare.Tpo $(DEPDIR)/camlrunmd-compare.Po
#	$(AM_V_CC)source='compare.c' object='camlrunmd-compare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-compare.o `test -f 'compare.c' || echo '$(srcdir)/'`compare.c

camlrunmd-compare.obj: compare.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-compare.obj -MD -MP -MF $(DEPDIR)/camlrunmd-compare.Tpo -c -o camlrunmd-compare.obj `if test -f 'compare.c'; then $(CYGPATH_W) 'compare.c'; else $(CYGPATH_W) '$(srcdir)/compare.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-compare.Tpo $(DEPDIR)/camlrunmd-compare.Po
#	$(AM_V_CC)source='compare.c' object='camlrunmd-compare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-compare.obj `if test -f 'compare.c'; then $(CYGPATH_W) 'compare.c'; else $(CYGPATH_W) '$(srcdir)/compare.c'; fi`

camlrunmd-externcp.o: externcp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-externcp.o -MD -MP -MF $(DEPDIR)/camlrunmd-externcp.Tpo -c -o camlrunmd-externcp.o `test -f 'externcp.c' || echo '$(srcdir)/'`externcp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-externcp.Tpo $(DEPDIR)/camlrunmd-externcp.Po
#	$(AM_V_CC)source='externcp.c' object='camlrunmd-externcp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-externcp.o `test -f 'externcp.c' || echo '$(srcdir)/'`externcp.c

camlrunmd-externcp.obj: externcp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-externcp.obj -MD -MP -MF $(DEPDIR)/camlrunmd-externcp.Tpo -c -o camlrunmd-externcp.obj `if test -f 'externcp.c'; then $(CYGPATH_W) 'externcp.c'; else $(CYGPATH_W) '$(srcdir)/externcp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-externcp.Tpo $(DEPDIR)/camlrunmd-externcp.Po
#	$(AM_V_CC)source='externcp.c' object='camlrunmd-externcp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-externcp.obj `if test -f 'externcp.c'; then $(CYGPATH_W) 'externcp.c'; else $(CYGPATH_W) '$(srcdir)/externcp.c'; fi`

camlrunmd-gc_ctrl.o: gc_ctrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-gc_ctrl.o -MD -MP -MF $(DEPDIR)/camlrunmd-gc_ctrl.Tpo -c -o camlrunmd-gc_ctrl.o `test -f 'gc_ctrl.c' || echo '$(srcdir)/'`gc_ctrl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-gc_ctrl.Tpo $(DEPDIR)/camlrunmd-gc_ctrl.Po
#	$(AM_V_CC)source='gc_ctrl.c' object='camlrunmd-gc_ctrl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-gc_ctrl.o `test -f 'gc_ctrl.c' || echo '$(srcdir)/'`gc_ctrl.c

camlrunmd-gc_ctrl.obj: gc_ctrl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-gc_ctrl.obj -MD -MP -MF $(DEPDIR)/camlrunmd-gc_ctrl.Tpo -c -o camlrunmd-gc_ctrl.obj `if test -f 'gc_ctrl.c'; then $(CYGPATH_W) 'gc_ctrl.c'; else $(CYGPATH_W) '$(srcdir)/gc_ctrl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-gc_ctrl.Tpo $(DEPDIR)/camlrunmd-gc_ctrl.Po
#	$(AM_V_CC)source='gc_ctrl.c' object='camlrunmd-gc_ctrl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-gc_ctrl.obj `if test -f 'gc_ctrl.c'; then $(CYGPATH_W) 'gc_ctrl.c'; else $(CYGPATH_W) '$(srcdir)/gc_ctrl.c'; fi`

camlrunmd-interp.o: interp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-interp.o -MD -MP -MF $(DEPDIR)/camlrunmd-interp.Tpo -c -o camlrunmd-interp.o `test -f 'interp.c' || echo '$(srcdir)/'`interp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-interp.Tpo $(DEPDIR)/camlrunmd-interp.Po
#	$(AM_V_CC)source='interp.c' object='camlrunmd-interp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-interp.o `test -f 'interp.c' || echo '$(srcdir)/'`interp.c

camlrunmd-interp.obj: interp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-interp.obj -MD -MP -MF $(DEPDIR)/camlrunmd-interp.Tpo -c -o camlrunmd-interp.obj `if test -f 'interp.c'; then $(CYGPATH_W) 'interp.c'; else $(CYGPATH_W) '$(srcdir)/interp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-interp.Tpo $(DEPDIR)/camlrunmd-interp.Po
#	$(AM_V_CC)source='interp.c' object='camlrunmd-interp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-interp.obj `if test -f 'interp.c'; then $(CYGPATH_W) 'interp.c'; else $(CYGPATH_W) '$(srcdir)/interp.c'; fi`

camlrunmd-major_gc.o: major_gc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-major_gc.o -MD -MP -MF $(DEPDIR)/camlrunmd-major_gc.Tpo -c -o camlrunmd-major_gc.o `test -f 'major_gc.c' || echo '$(srcdir)/'`major_gc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-major_gc.Tpo $(DEPDIR)/camlrunmd-major_gc.Po
#	$(AM_V_CC)source='major_gc.c' object='camlrunmd-major_gc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-major_gc.o `test -f 'major_gc.c' || echo '$(srcdir)/'`major_gc.c

camlrunmd-major_gc.obj: major_gc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-major_gc.obj -MD -MP -MF $(DEPDIR)/camlrunmd-major_gc.Tpo -c -o camlrunmd-major_gc.obj `if test -f 'major_gc.c'; then $(CYGPATH_W) 'major_gc.c'; else $(CYGPATH_W) '$(srcdir)/major_gc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-major_gc.Tpo $(DEPDIR)/camlrunmd-major_gc.Po
#	$(AM_V_CC)source='major_gc.c' object='camlrunmd-major_gc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-major_gc.obj `if test -f 'major_gc.c'; then $(CYGPATH_W) 'major_gc.c'; else $(CYGPATH_W) '$(srcdir)/major_gc.c'; fi`

camlrunmd-misc.o: misc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-misc.o -MD -MP -MF $(DEPDIR)/camlrunmd-misc.Tpo -c -o camlrunmd-misc.o `test -f 'misc.c' || echo '$(srcdir)/'`misc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-misc.Tpo $(DEPDIR)/camlrunmd-misc.Po
#	$(AM_V_CC)source='misc.c' object='camlrunmd-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-misc.o `test -f 'misc.c' || echo '$(srcdir)/'`misc.c

camlrunmd-misc.obj: misc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-misc.obj -MD -MP -MF $(DEPDIR)/camlrunmd-misc.Tpo -c -o camlrunmd-misc.obj `if test -f 'misc.c'; then $(CYGPATH_W) 'misc.c'; else $(CYGPATH_W) '$(srcdir)/misc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-misc.Tpo $(DEPDIR)/camlrunmd-misc.Po
#	$(AM_V_CC)source='misc.c' object='camlrunmd-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-misc.obj `if test -f 'misc.c'; then $(CYGPATH_W) 'misc.c'; else $(CYGPATH_W) '$(srcdir)/misc.c'; fi`

camlrunmd-runtime.o: runtime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-runtime.o -MD -MP -MF $(DEPDIR)/camlrunmd-runtime.Tpo -c -o camlrunmd-runtime.o `test -f 'runtime.c' || echo '$(srcdir)/'`runtime.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-runtime.Tpo $(DEPDIR)/camlrunmd-runtime.Po
#	$(AM_V_CC)source='runtime.c' object='camlrunmd-runtime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-runtime.o `test -f 'runtime.c' || echo '$(srcdir)/'`runtime.c

camlrunmd-runtime.obj: runtime.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-runtime.obj -MD -MP -MF $(DEPDIR)/camlrunmd-runtime.Tpo -c -o camlrunmd-runtime.obj `if test -f 'runtime.c'; then $(CYGPATH_W) 'runtime.c'; else $(CYGPATH_W) '$(srcdir)/runtime.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-runtime.Tpo $(DEPDIR)/camlrunmd-runtime.Po
#	$(AM_V_CC)source='runtime.c' object='camlrunmd-runtime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-runtime.obj `if test -f 'runtime.c'; then $(CYGPATH_W) 'runtime.c'; else $(CYGPATH_W) '$(srcdir)/runtime.c'; fi`

camlrunmd-unix.o: unix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-unix.o -MD -MP -MF $(DEPDIR)/camlrunmd-unix.Tpo -c -o camlrunmd-unix.o `test -f 'unix.c' || echo '$(srcdir)/'`unix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-unix.Tpo $(DEPDIR)/camlrunmd-unix.Po
#	$(AM_V_CC)source='unix.c' object='camlrunmd-unix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-unix.o `test -f 'unix.c' || echo '$(srcdir)/'`unix.c

camlrunmd-unix.obj: unix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-unix.obj -MD -MP -MF $(DEPDIR)/camlrunmd-unix.Tpo -c -o camlrunmd-unix.obj `if test -f 'unix.c'; then $(CYGPATH_W) 'unix.c'; else $(CYGPATH_W) '$(srcdir)/unix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-unix.Tpo $(DEPDIR)/camlrunmd-unix.Po
#	$(AM_V_CC)source='unix.c' object='camlrunmd-unix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-unix.obj `if test -f 'unix.c'; then $(CYGPATH_W) 'unix.c'; else $(CYGPATH_W) '$(srcdir)/unix.c'; fi`

camlrunmd-fail.o: fail.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-fail.o -MD -MP -MF $(DEPDIR)/camlrunmd-fail.Tpo -c -o camlrunmd-fail.o `test -f 'fail.c' || echo '$(srcdir)/'`fail.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-fail.Tpo $(DEPDIR)/camlrunmd-fail.Po
#	$(AM_V_CC)source='fail.c' object='camlrunmd-fail.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-fail.o `test -f 'fail.c' || echo '$(srcdir)/'`fail.c

camlrunmd-fail.obj: fail.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-fail.obj -MD -MP -MF $(DEPDIR)/camlrunmd-fail.Tpo -c -o camlrunmd-fail.obj `if test -f 'fail.c'; then $(CYGPATH_W) 'fail.c'; else $(CYGPATH_W) '$(srcdir)/fail.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-fail.Tpo $(DEPDIR)/camlrunmd-fail.Po
#	$(AM_V_CC)source='fail.c' object='camlrunmd-fail.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-fail.obj `if test -f 'fail.c'; then $(CYGPATH_W) 'fail.c'; else $(CYGPATH_W) '$(srcdir)/fail.c'; fi`

camlrunmd-ints.o: ints.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-ints.o -MD -MP -MF $(DEPDIR)/camlrunmd-ints.Tpo -c -o camlrunmd-ints.o `test -f 'ints.c' || echo '$(srcdir)/'`ints.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-ints.Tpo $(DEPDIR)/camlrunmd-ints.Po
#	$(AM_V_CC)source='ints.c' object='camlrunmd-ints.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-ints.o `test -f 'ints.c' || echo '$(srcdir)/'`ints.c

camlrunmd-ints.obj: ints.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-ints.obj -MD -MP -MF $(DEPDIR)/camlrunmd-ints.Tpo -c -o camlrunmd-ints.obj `if test -f 'ints.c'; then $(CYGPATH_W) 'ints.c'; else $(CYGPATH_W) '$(srcdir)/ints.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-ints.Tpo $(DEPDIR)/camlrunmd-ints.Po
#	$(AM_V_CC)source='ints.c' object='camlrunmd-ints.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-ints.obj `if test -f 'ints.c'; then $(CYGPATH_W) 'ints.c'; else $(CYGPATH_W) '$(srcdir)/ints.c'; fi`

camlrunmd-md5sum.o: md5sum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-md5sum.o -MD -MP -MF $(DEPDIR)/camlrunmd-md5sum.Tpo -c -o camlrunmd-md5sum.o `test -f 'md5sum.c' || echo '$(srcdir)/'`md5sum.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-md5sum.Tpo $(DEPDIR)/camlrunmd-md5sum.Po
#	$(AM_V_CC)source='md5sum.c' object='camlrunmd-md5sum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-md5sum.o `test -f 'md5sum.c' || echo '$(srcdir)/'`md5sum.c

camlrunmd-md5sum.obj: md5sum.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-md5sum.obj -MD -MP -MF $(DEPDIR)/camlrunmd-md5sum.Tpo -c -o camlrunmd-md5sum.obj `if test -f 'md5sum.c'; then $(CYGPATH_W) 'md5sum.c'; else $(CYGPATH_W) '$(srcdir)/md5sum.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-md5sum.Tpo $(DEPDIR)/camlrunmd-md5sum.Po
#	$(AM_V_CC)source='md5sum.c' object='camlrunmd-md5sum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-md5sum.obj `if test -f 'md5sum.c'; then $(CYGPATH_W) 'md5sum.c'; else $(CYGPATH_W) '$(srcdir)/md5sum.c'; fi`

camlrunmd-mosml.o: mosml.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-mosml.o -MD -MP -MF $(DEPDIR)/camlrunmd-mosml.Tpo -c -o camlrunmd-mosml.o `test -f 'mosml.c' || echo '$(srcdir)/'`mosml.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-mosml.Tpo $(DEPDIR)/camlrunmd-mosml.Po
#	$(AM_V_CC)source='mosml.c' object='camlrunmd-mosml.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-mosml.o `test -f 'mosml.c' || echo '$(srcdir)/'`mosml.c

camlrunmd-mosml.obj: mosml.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-mosml.obj -MD -MP -MF $(DEPDIR)/camlrunmd-mosml.Tpo -c -o camlrunmd-mosml.obj `if test -f 'mosml.c'; then $(CYGPATH_W) 'mosml.c'; else $(CYGPATH_W) '$(srcdir)/mosml.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-mosml.Tpo $(DEPDIR)/camlrunmd-mosml.Po
#	$(AM_V_CC)source='mosml.c' object='camlrunmd-mosml.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-mosml.obj `if test -f 'mosml.c'; then $(CYGPATH_W) 'mosml.c'; else $(CYGPATH_W) '$(srcdir)/mosml.c'; fi`

camlrunmd-signals.o: signals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-signals.o -MD -MP -MF $(DEPDIR)/camlrunmd-signals.Tpo -c -o camlrunmd-signals.o `test -f 'signals.c' || echo '$(srcdir)/'`signals.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-signals.Tpo $(DEPDIR)/camlrunmd-signals.Po
#	$(AM_V_CC)source='signals.c' object='camlrunmd-signals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-signals.o `test -f 'signals.c' || echo '$(srcdir)/'`signals.c

camlrunmd-signals.obj: signals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-signals.obj -MD -MP -MF $(DEPDIR)/camlrunmd-signals.Tpo -c -o camlrunmd-signals.obj `if test -f 'signals.c'; then $(CYGPATH_W) 'signals.c'; else $(CYGPATH_W) '$(srcdir)/signals.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-signals.Tpo $(DEPDIR)/camlrunmd-signals.Po
#	$(AM_V_CC)source='signals.c' object='camlrunmd-signals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-signals.obj `if test -f 'signals.c'; then $(CYGPATH_W) 'signals.c'; else $(CYGPATH_W) '$(srcdir)/signals.c'; fi`

camlrunmd-dynlib.o: dynlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-dynlib.o -MD -MP -MF $(DEPDIR)/camlrunmd-dynlib.Tpo -c -o camlrunmd-dynlib.o `test -f 'dynlib.c' || echo '$(srcdir)/'`dynlib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-dynlib.Tpo $(DEPDIR)/camlrunmd-dynlib.Po
#	$(AM_V_CC)source='dynlib.c' object='camlrunmd-dynlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-dynlib.o `test -f 'dynlib.c' || echo '$(srcdir)/'`dynlib.c

camlrunmd-dynlib.obj: dynlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-dynlib.obj -MD -MP -MF $(DEPDIR)/camlrunmd-dynlib.Tpo -c -o camlrunmd-dynlib.obj `if test -f 'dynlib.c'; then $(CYGPATH_W) 'dynlib.c'; else $(CYGPATH_W) '$(srcdir)/dynlib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-dynlib.Tpo $(DEPDIR)/camlrunmd-dynlib.Po
#	$(AM_V_CC)source='dynlib.c' object='camlrunmd-dynlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-dynlib.obj `if test -f 'dynlib.c'; then $(CYGPATH_W) 'dynlib.c'; else $(CYGPATH_W) '$(srcdir)/dynlib.c'; fi`

camlrunmd-fix_code.o: fix_code.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-fix_code.o -MD -MP -MF $(DEPDIR)/camlrunmd-fix_code.Tpo -c -o camlrunmd-fix_code.o `test -f 'fix_code.c' || echo '$(srcdir)/'`fix_code.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-fix_code.Tpo $(DEPDIR)/camlrunmd-fix_code.Po
#	$(AM_V_CC)source='fix_code.c' object='camlrunmd-fix_code.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-fix_code.o `test -f 'fix_code.c' || echo '$(srcdir)/'`fix_code.c

camlrunmd-fix_code.obj: fix_code.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-fix_code.obj -MD -MP -MF $(DEPDIR)/camlrunmd-fix_code.Tpo -c -o camlrunmd-fix_code.obj `if test -f 'fix_code.c'; then $(CYGPATH_W) 'fix_code.c'; else $(CYGPATH_W) '$(srcdir)/fix_code.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-fix_code.Tpo $(DEPDIR)/camlrunmd-fix_code.Po
#	$(AM_V_CC)source='fix_code.c' object='camlrunmd-fix_code.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-fix_code.obj `if test -f 'fix_code.c'; then $(CYGPATH_W) 'fix_code.c'; else $(CYGPATH_W) '$(srcdir)/fix_code.c'; fi`

camlrunmd-hash.o: hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-hash.o -MD -MP -MF $(DEPDIR)/camlrunmd-hash.Tpo -c -o camlrunmd-hash.o `test -f 'hash.c' || echo '$(srcdir)/'`hash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-hash.Tpo $(DEPDIR)/camlrunmd-hash.Po
#	$(AM_V_CC)source='hash.c' object='camlrunmd-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-hash.o `test -f 'hash.c' || echo '$(srcdir)/'`hash.c

camlrunmd-hash.obj: hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-hash.obj -MD -MP -MF $(DEPDIR)/camlrunmd-hash.Tpo -c -o camlrunmd-hash.obj `if test -f 'hash.c'; then $(CYGPATH_W) 'hash.c'; else $(CYGPATH_W) '$(srcdir)/hash.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-hash.Tpo $(DEPDIR)/camlrunmd-hash.Po
#	$(AM_V_CC)source='hash.c' object='camlrunmd-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-hash.obj `if test -f 'hash.c'; then $(CYGPATH_W) 'hash.c'; else $(CYGPATH_W) '$(srcdir)/hash.c'; fi`

camlrunmd-io.o: io.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-io.o -MD -MP -MF $(DEPDIR)/camlrunmd-io.Tpo -c -o camlrunmd-io.o `test -f 'io.c' || echo '$(srcdir)/'`io.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-io.Tpo $(DEPDIR)/camlrunmd-io.Po
#	$(AM_V_CC)source='io.c' object='camlrunmd-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-io.o `test -f 'io.c' || echo '$(srcdir)/'`io.c

camlrunmd-io.obj: io.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-io.obj -MD -MP -MF $(DEPDIR)/camlrunmd-io.Tpo -c -o camlrunmd-io.obj `if test -f 'io.c'; then $(CYGPATH_W) 'io.c'; else $(CYGPATH_W) '$(srcdir)/io.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-io.Tpo $(DEPDIR)/camlrunmd-io.Po
#	$(AM_V_CC)source='io.c' object='camlrunmd-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-io.obj `if test -f 'io.c'; then $(CYGPATH_W) 'io.c'; else $(CYGPATH_W) '$(srcdir)/io.c'; fi`

camlrunmd-memory.o: memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-memory.o -MD -MP -MF $(DEPDIR)/camlrunmd-memory.Tpo -c -o camlrunmd-memory.o `test -f 'memory.c' || echo '$(srcdir)/'`memory.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-memory.Tpo $(DEPDIR)/camlrunmd-memory.Po
#	$(AM_V_CC)source='memory.c' object='camlrunmd-memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-memory.o `test -f 'memory.c' || echo '$(srcdir)/'`memory.c

camlrunmd-memory.obj: memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-memory.obj -MD -MP -MF $(DEPDIR)/camlrunmd-memory.Tpo -c -o camlrunmd-memory.obj `if test -f 'memory.c'; then $(CYGPATH_W) 'memory.c'; else $(CYGPATH_W) '$(srcdir)/memory.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-memory.Tpo $(DEPDIR)/camlrunmd-memory.Po
#	$(AM_V_CC)source='memory.c' object='camlrunmd-memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-memory.obj `if test -f 'memory.c'; then $(CYGPATH_W) 'memory.c'; else $(CYGPATH_W) '$(srcdir)/memory.c'; fi`

camlrunmd-stacks.o: stacks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-stacks.o -MD -MP -MF $(DEPDIR)/camlrunmd-stacks.Tpo -c -o camlrunmd-stacks.o `test -f 'stacks.c' || echo '$(srcdir)/'`stacks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-stacks.Tpo $(DEPDIR)/camlrunmd-stacks.Po
#	$(AM_V_CC)source='stacks.c' object='camlrunmd-stacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-stacks.o `test -f 'stacks.c' || echo '$(srcdir)/'`stacks.c

camlrunmd-stacks.obj: stacks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-stacks.obj -MD -MP -MF $(DEPDIR)/camlrunmd-stacks.Tpo -c -o camlrunmd-stacks.obj `if test -f 'stacks.c'; then $(CYGPATH_W) 'stacks.c'; else $(CYGPATH_W) '$(srcdir)/stacks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-stacks.Tpo $(DEPDIR)/camlrunmd-stacks.Po
#	$(AM_V_CC)source='stacks.c' object='camlrunmd-stacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-stacks.obj `if test -f 'stacks.c'; then $(CYGPATH_W) 'stacks.c'; else $(CYGPATH_W) '$(srcdir)/stacks.c'; fi`

camlrunmd-debugger.o: debugger.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-debugger.o -MD -MP -MF $(DEPDIR)/camlrunmd-debugger.Tpo -c -o camlrunmd-debugger.o `test -f 'debugger.c' || echo '$(srcdir)/'`debugger.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-debugger.Tpo $(DEPDIR)/camlrunmd-debugger.Po
#	$(AM_V_CC)source='debugger.c' object='camlrunmd-debugger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-debugger.o `test -f 'debugger.c' || echo '$(srcdir)/'`debugger.c

camlrunmd-debugger.obj: debugger.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-debugger.obj -MD -MP -MF $(DEPDIR)/camlrunmd-debugger.Tpo -c -o camlrunmd-debugger.obj `if test -f 'debugger.c'; then $(CYGPATH_W) 'debugger.c'; else $(CYGPATH_W) '$(srcdir)/debugger.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-debugger.Tpo $(DEPDIR)/camlrunmd-debugger.Po
#	$(AM_V_CC)source='debugger.c' object='camlrunmd-debugger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-debugger.obj `if test -f 'debugger.c'; then $(CYGPATH_W) 'debugger.c'; else $(CYGPATH_W) '$(srcdir)/debugger.c'; fi`

camlrunmd-prims.o: prims.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-prims.o -MD -MP -MF $(DEPDIR)/camlrunmd-prims.Tpo -c -o camlrunmd-prims.o `test -f 'prims.c' || echo '$(srcdir)/'`prims.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-prims.Tpo $(DEPDIR)/camlrunmd-prims.Po
#	$(AM_V_CC)source='prims.c' object='camlrunmd-prims.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-prims.o `test -f 'prims.c' || echo '$(srcdir)/'`prims.c

camlrunmd-prims.obj: prims.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -MT camlrunmd-prims.obj -MD -MP -MF $(DEPDIR)/camlrunmd-prims.Tpo -c -o camlrunmd-prims.obj `if test -f 'prims.c'; then $(CYGPATH_W) 'prims.c'; else $(CYGPATH_W) '$(srcdir)/prims.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/camlrunmd-prims.Tpo $(DEPDIR)/camlrunmd-prims.Po
#	$(AM_V_CC)source='prims.c' object='camlrunmd-prims.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(camlrunmd_CFLAGS) $(CFLAGS) -c -o camlrunmd-prims.obj `if test -f 'prims.c'; then $(CYGPATH_W) 'prims.c'; else $(CYGPATH_W) '$(srcdir)/prims.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-camlrunm_instHEADERS: $(camlrunm_inst_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(camlrunm_inst_HEADERS)'; test -n "$(camlrunm_instdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(camlrunm_instdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(camlrunm_instdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(camlrunm_instdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(camlrunm_instdir)" || exit $$?; \
	done

uninstall-camlrunm_instHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(camlrunm_inst_HEADERS)'; test -n "$(camlrunm_instdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(camlrunm_instdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) autoconfig.h \
		all-local
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(camlrunm_instdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-camlrunm_instHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-camlrunm_instHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-camlrunm_instHEADERS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-camlrunm_instHEADERS uninstall-libLTLIBRARIES


#   CW32_CFLAGS = -DCAMLRT -DWIN32 -D_CONSOLE -D_MBCS
#   CW32_PROGS = camlrt.dll
#   CW32_LDFLAGS = -mconsole
#   CW32_CFLAGS =
#   CW32_PROGS =
#   CW32_LDFLAGS =

all-local: ../camlrunm$(EXEEXT)

../camlrunm$(EXEEXT) : camlrunm
	cp camlrunm ../camlrunm$(EXEEXT)

primitives : $(PRIMS)
	$(SED) -n -e '/\/\* ML \*\//s/.* \([a-zA-Z0-9_][a-zA-Z0-9_]*\) *(.*/\1/p' \
                   $(PRIMS) > primitives2
	sh -c 'if cmp -s primitives primitives2; \
        then rm primitives2; \
        else mv primitives2 primitives; \
        fi'

prims.c : primitives
	(echo '#include "mlvalues.h"'; \
	 echo '#include "prims.h"'; \
	 $(SED) -e 's/.*/extern value &();/' primitives; \
	 echo 'c_primitive cprim[] = {'; \
	 $(SED) -e 's/.*/  &,/' primitives; \
	 echo '  0 };'; \
         echo 'char * names_of_cprim[] = {'; \
	 $(SED) -e 's/.*/  "&",/' primitives; \
	 echo '  0 };') > prims.c

opnames.h : instruct.h
	$(SED) -e '/\/\*/d' \
            -e 's/enum /char * names_of_/' \
            -e 's/{$$/[] = {/' \
            -e 's/\([A-Z][A-Z_0-9]*\)/"\1"/g' instruct.h > opnames.h

jumptbl.h : instruct.h
	$(AWK) -f ../tools/make-jumptbl instruct.h > jumptbl.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
